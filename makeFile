# Set up the docker compose directory locations
ORCHESTRATION_DIR = ./orchestration
PROCESSING_DIR = ./processing
STREAMING_DIR = ./streaming

# Define the targets for each service
DOCKER_COMPOSE = docker-compose -f

# Build and start all the containers
start: start_orchestration start_processing start_streaming

# Start the orchestration containers
start_orchestration:
	$(DOCKER_COMPOSE) $(ORCHESTRATION_DIR)/docker-compose.yml up -d

# Start the processing containers
start_processing:
	$(DOCKER_COMPOSE) $(PROCESSING_DIR)/docker-compose.yml up -d

# Start the streaming containers
start_streaming:
	$(DOCKER_COMPOSE) $(STREAMING_DIR)/docker-compose.yml up -d

# Stop all containers and remove volumes
stop:
	$(DOCKER_COMPOSE) $(ORCHESTRATION_DIR)/docker-compose.yml down -v
	$(DOCKER_COMPOSE) $(PROCESSING_DIR)/docker-compose.yml down -v
	$(DOCKER_COMPOSE) $(STREAMING_DIR)/docker-compose.yml down -v

# Rebuild all containers
rebuild: stop start

# View logs for each container
logs:
	$(DOCKER_COMPOSE) $(ORCHESTRATION_DIR)/docker-compose.yml logs -f
	$(DOCKER_COMPOSE) $(PROCESSING_DIR)/docker-compose.yml logs -f
	$(DOCKER_COMPOSE) $(STREAMING_DIR)/docker-compose.yml logs -f

# Run tests (if you have any)
tests:
	# Insert test commands here, e.g., Pytest, unit tests, etc.

# Pull latest images for all services
pull:
	$(DOCKER_COMPOSE) $(ORCHESTRATION_DIR)/docker-compose.yml pull
	$(DOCKER_COMPOSE) $(PROCESSING_DIR)/docker-compose.yml pull
	$(DOCKER_COMPOSE) $(STREAMING_DIR)/docker-compose.yml pull
